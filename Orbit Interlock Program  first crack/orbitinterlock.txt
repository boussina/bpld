-- MAX+plus II VHDL Template
-- Clearable loadable enablable counter

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

entity beamlineinterlock is

port(CLKIN,BL1HB,BL2HB,BL3HB,BL4HB,BL5HB,BL6HB,BL7HB,BL8HB,BL9HB,BL10HB,BL11HB,BL12HB,
	 BL1IDGAP,BL2IDGAP,BL3IDGAP,BL4IDGAP,BL5IDGAP,BL6IDGAP,BL7IDGAP,BL8IDGAP,BL9IDGAP,
 	 BL10IDGAP,BL11IDGAP,BL12IDGAP,
 	 BL1STIN,BL2STIN,BL3STIN,BL4STIN,BL5STIN,BL6STIN,BL7STIN,BL8STIN,BL9STIN,BL10STIN,
     BL11STIN,BL12STIN,
     BL1HBBYPASS,BL2HBBYPASS,BL3HBBYPASS,BL4HBBYPASS,BL5HBBYPASS,BL6HBBYPASS,BL7HBBYPASS,
	 BL8HBBYPASS,BL9HBBYPASS,BL10HBBYPASS,BL11HBBYPASS,BL12HBBYPASS,
     BL1CUR,BL2CUR,BL3CUR,BL4CUR,BL5CUR,BL6CUR,BL7CUR,BL8CUR,BL9CUR,BL10CUR,BL11CUR,BL12CUR:in std_logic;
	 BL1HBOK,BL2HBOK,BL3HBOK,BL4HBOK,BL5HBOK,BL6HBOK,BL7HBOK,BL8HBOK,BL9HBOK,BL10HBOK,BL11HBOK,BL12HBOK,ALLBLEN:out std_logic);
end beamlineinterlock;

       
architecture dataflow of beamlineinterlock is

signal BL1RFEN,BL2RFEN,BL3RFEN,BL4RFEN,BL5RFEN,BL6RFEN,BL7RFEN,BL8RFEN,BL9RFEN,BL10RFEN,BL11RFEN,BL12RFEN,
	   BL1STEN,BL2STEN,BL3STEN,BL4STEN,BL5STEN,BL6STEN,BL7STEN,BL8STEN,BL9STEN,BL10STEN,BL11STEN,BL12STEN: std_logic;
constant gate_delay: Time:=5 ns;    


BEGIN
COUNTCLK_PROC:PROCESS(CLKIN)
variable BL1COUNTER,BL2COUNTER,BL3COUNTER,BL4COUNTER,BL5COUNTER,BL6COUNTER,BL7COUNTER,BL8COUNTER,BL9COUNTER,BL10COUNTER,
      BL11COUNTER,BL12COUNTER: INTEGER RANGE 0 TO 255;
BEGIN
      BL1COUNTER:=BL1COUNTER+1;
	  BL2COUNTER:=BL2COUNTER+1;
      BL3COUNTER:=BL3COUNTER+1;
      BL4COUNTER:=BL4COUNTER+1;
      BL5COUNTER:=BL5COUNTER+1;
	  BL6COUNTER:=BL6COUNTER+1;
      BL7COUNTER:=BL7COUNTER+1;
      BL8COUNTER:=BL8COUNTER+1;
      BL9COUNTER:=BL9COUNTER+1;
	  BL10COUNTER:=BL10COUNTER+1;
      BL11COUNTER:=BL11COUNTER+1;
      BL12COUNTER:=BL12COUNTER+1;
     IF (BL11COUNTER>128) THEN BL1HBOK<='0'; END IF;
	 IF BL2COUNTER>128 THEN BL2HBOK<='0'; END IF;
	 IF BL3COUNTER>128 THEN BL3HBOK<='0'; END IF;
	 IF BL4COUNTER>128 THEN BL4HBOK<='0'; END IF;
	 IF BL5COUNTER>128 THEN BL5HBOK<='0'; END IF;
	 IF BL6COUNTER>128 THEN BL6HBOK<='0'; END IF;
	 IF BL7COUNTER>128 THEN BL7HBOK<='0'; END IF;
	 IF BL8COUNTER>128 THEN BL8HBOK<='0'; END IF;
	 IF BL9COUNTER>128 THEN BL9HBOK<='0'; END IF;
	 IF BL10COUNTER>128 THEN BL10HBOK<='0'; END IF;
	 IF BL11COUNTER>128 THEN BL11HBOK<='0'; END IF;
	 IF BL12COUNTER>128 THEN BL12HBOK<='0'; END IF;
END PROCESS;

BL1STEN<=(BL1HBBYPASS AND BL1STIN AND BL1IDGAP) OR BL1HB;
BL2STEN<=(BL2HBBYPASS AND BL2STIN AND BL2IDGAP) OR BL2HB;
BL3STEN<=(BL3HBBYPASS AND BL3STIN AND BL3IDGAP) OR BL3HB;
BL4STEN<=(BL4HBBYPASS AND BL4STIN AND BL4IDGAP) OR BL4HB;
BL5STEN<=(BL5HBBYPASS AND BL5STIN AND BL5IDGAP) OR BL5HB;
BL6STEN<=(BL6HBBYPASS AND BL6STIN AND BL6IDGAP) OR BL6HB;
BL7STEN<=(BL7HBBYPASS AND BL7STIN AND BL7IDGAP) OR BL7HB;
BL8STEN<=(BL8HBBYPASS AND BL8STIN AND BL8IDGAP) OR BL8HB;
BL9STEN<=(BL9HBBYPASS AND BL9STIN AND BL9IDGAP) OR BL9HB;
BL10STEN<=(BL10HBBYPASS AND BL10STIN AND BL10IDGAP) OR BL10HB;
BL11STEN<=(BL11HBBYPASS AND BL11STIN AND BL11IDGAP) OR BL11HB;
BL12STEN<=(BL12HBBYPASS AND BL12STIN AND BL12IDGAP) OR BL12HB;

BL1RFEN<=((BL1STIN AND BL1CUR) OR BL1STEN) AFTER 5 NS;
BL2RFEN<=((BL2STIN AND BL2CUR) OR BL2STEN) AFTER 5 NS;
BL3RFEN<=((BL3STIN AND BL3CUR) OR BL3STEN) AFTER 5 NS;
BL4RFEN<=((BL4STIN AND BL4CUR) OR BL4STEN) AFTER 5 NS;
BL5RFEN<=((BL5STIN AND BL5CUR) OR BL5STEN) AFTER 5 NS;
BL6RFEN<=((BL6STIN AND BL6CUR) OR BL6STEN) AFTER 5 NS;
BL7RFEN<=((BL7STIN AND BL7CUR) OR BL7STEN) AFTER 5 NS;
BL8RFEN<=((BL8STIN AND BL8CUR) OR BL8STEN) AFTER 5 NS;
BL9RFEN<=((BL9STIN AND BL9CUR) OR BL9STEN) AFTER 5 NS;
BL10RFEN<=((BL10STIN AND BL10CUR) OR BL10STEN) AFTER 5 NS;
BL11RFEN<=((BL11STIN AND BL11CUR) OR BL11STEN) AFTER 5 NS;
BL12RFEN<=((BL12STIN AND BL12CUR) OR BL12STEN) AFTER 5 NS;

ALLBLEN<=(BL1RFEN AND BL2RFEN AND BL3RFEN AND BL4RFEN AND BL4RFEN AND BL5RFEN AND BL6RFEN
          AND BL7RFEN AND BL8RFEN AND BL9RFEN AND BL10RFEN AND BL11RFEN AND BL12RFEN) AFTER 55 ns;

end dataflow;


